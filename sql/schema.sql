SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CUSTOMER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CUSTOMER` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CUSTOMER` (
  `CUSTOMER_ID` BIGINT NOT NULL ,
  `CUST_FIRST_NAME` VARCHAR(45) NOT NULL ,
  `CUST_LAST_NAME` VARCHAR(45) NOT NULL ,
  `CUST_EMAIL_ADDRESS` VARCHAR(45) NOT NULL ,
  `CUST_PHONE_NUMBER` VARCHAR(10) NOT NULL ,
  `CUST_PASSWORD` VARCHAR(45) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  `UPDATE_DATE_TIME` TIMESTAMP NULL ,
  PRIMARY KEY (`CUSTOMER_ID`) ,
  UNIQUE INDEX `CUST_EMAIL_ADDRESS_UNIQUE` (`CUST_EMAIL_ADDRESS` ASC) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GLOBAL_DISCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GLOBAL_DISCOUNT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `GLOBAL_DISCOUNT` (
  `GLOBAL_DISCOUNT_ID` BIGINT NOT NULL ,
  `DISCOUNT_PCT` DECIMAL(5,2) NULL ,
  `DISCOUNT_START_DATE` TIMESTAMP NOT NULL ,
  `DISCOUNT_END_DATE` TIMESTAMP NULL ,
  `UPDATED_BY` VARCHAR(45) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NULL ,
  PRIMARY KEY (`GLOBAL_DISCOUNT_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PAYMENT_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PAYMENT_TYPE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PAYMENT_TYPE` (
  `PAYMENT_TYPE_ID` BIGINT NOT NULL ,
  `PAYMENT_CARD` VARCHAR(45) NOT NULL ,
  `PAYMENT_CODE` VARCHAR(3) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PAYMENT_TYPE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PAYMENT_STATUS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PAYMENT_STATUS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PAYMENT_STATUS` (
  `PAYMENT_STATUS_ID` BIGINT NOT NULL ,
  `PAYMENT_STATUS_NAME` VARCHAR(45) NOT NULL ,
  `PAYMENT_STATUS_CODE` VARCHAR(4) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PAYMENT_STATUS_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ORDERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ORDERS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ORDERS` (
  `ORDER_ID` BIGINT NOT NULL ,
  `CUSTOMER_ID` BIGINT NOT NULL ,
  `ORDER_NUM` VARCHAR(10) NOT NULL ,
  `ORDER_AMOUNT` DECIMAL(8,2) NOT NULL ,
  `SHIP_BILLING_ADDRESS` TINYINT(1)  NOT NULL DEFAULT 0 ,
  `DISCOUNT_APPLIED` TINYINT(1)  NOT NULL DEFAULT 0 ,
  `CURRENT_ORDER_STATUS_ID` BIGINT NOT NULL ,
  `GLOBAL_DISCOUNT_ID` BIGINT NULL ,
  `ORDER_ADDL_DISCOUNT` DECIMAL(5,2) NULL ,
  `PAYMENT_TYPE_ID` BIGINT NOT NULL ,
  `PAYMENT_TRAN_NUM` VARCHAR(20) NULL ,
  `PAYMENT_STATUS_ID` BIGINT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  `UPDATE_DATE_TIME` TIMESTAMP NULL ,
  PRIMARY KEY (`ORDER_ID`) ,
  UNIQUE INDEX `ORDER_NUM_UNIQUE` (`CUSTOMER_ID` ASC, `ORDER_NUM` ASC) ,
  INDEX `CUSTOMER_FK` (`CUSTOMER_ID` ASC) ,
  INDEX `ORDER_GLB_DISCOUNT_FK` (`GLOBAL_DISCOUNT_ID` ASC) ,
  INDEX `ORDER_PAYMENT_FK` (`PAYMENT_TYPE_ID` ASC) ,
  INDEX `PAYMENT_STATUS_FK` (`PAYMENT_STATUS_ID` ASC) ,
  CONSTRAINT `CUSTOMER_FK`
    FOREIGN KEY (`CUSTOMER_ID` )
    REFERENCES `CUSTOMER` (`CUSTOMER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ORDER_GLB_DISCOUNT_FK`
    FOREIGN KEY (`GLOBAL_DISCOUNT_ID` )
    REFERENCES `GLOBAL_DISCOUNT` (`GLOBAL_DISCOUNT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ORDER_PAYMENT_FK`
    FOREIGN KEY (`PAYMENT_TYPE_ID` )
    REFERENCES `PAYMENT_TYPE` (`PAYMENT_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PAYMENT_STATUS_FK`
    FOREIGN KEY (`PAYMENT_STATUS_ID` )
    REFERENCES `PAYMENT_STATUS` (`PAYMENT_STATUS_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ORDER_STATUS_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ORDER_STATUS_TYPE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ORDER_STATUS_TYPE` (
  `ORDER_STATUS_TYPE_ID` BIGINT NOT NULL ,
  `ORDER_STATUS_NAME` VARCHAR(30) NOT NULL ,
  `ORDER_STATUS_CODE` VARCHAR(4) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`ORDER_STATUS_TYPE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ORDER_STATUS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ORDER_STATUS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ORDER_STATUS` (
  `ORDER_STATUS_ID` BIGINT NOT NULL ,
  `ORDER_ID` BIGINT NOT NULL ,
  `ORDER_STATUS_TYPE_ID` BIGINT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`ORDER_STATUS_ID`) ,
  INDEX `ORDER_STATUS_FK` (`ORDER_ID` ASC) ,
  INDEX `ORDER_STATUS_TYPE_FK` (`ORDER_STATUS_TYPE_ID` ASC) ,
  CONSTRAINT `ORDER_STATUS_FK`
    FOREIGN KEY (`ORDER_ID` )
    REFERENCES `ORDERS` (`ORDER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ORDER_STATUS_TYPE_FK`
    FOREIGN KEY (`ORDER_STATUS_TYPE_ID` )
    REFERENCES `ORDER_STATUS_TYPE` (`ORDER_STATUS_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ADDRESS_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ADDRESS_TYPE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ADDRESS_TYPE` (
  `ADDRESS_TYPE_ID` BIGINT NOT NULL ,
  `ADDRESS_TYPE_NAME` VARCHAR(45) NOT NULL ,
  `ADDRESS_TYPE_CODE` VARCHAR(4) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`ADDRESS_TYPE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `STATE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `STATE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `STATE` (
  `STATE_ID` BIGINT NOT NULL ,
  `STATE_NAME` VARCHAR(45) NOT NULL ,
  `STATE_CODE` VARCHAR(3) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`STATE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ADDRESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ADDRESS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ADDRESS` (
  `ADDRESS_ID` BIGINT NOT NULL ,
  `SHIP_TO` VARCHAR(45) NOT NULL ,
  `ADDRESS_LINE1` VARCHAR(45) NOT NULL ,
  `ADDRESS_LINE2` VARCHAR(45) NULL ,
  `CITY` VARCHAR(45) NOT NULL ,
  `POSTAL_CODE` VARCHAR(6) NOT NULL ,
  `STATE_ID` BIGINT NOT NULL ,
  `PHONE_NUMBER` VARCHAR(10) NOT NULL ,
  `ADDRESS_TYPE_ID` BIGINT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`ADDRESS_ID`) ,
  INDEX `ADDRESS_TYPE_FK` (`ADDRESS_TYPE_ID` ASC) ,
  INDEX `ADDRESS_STATE_FK` (`STATE_ID` ASC) ,
  CONSTRAINT `ADDRESS_TYPE_FK`
    FOREIGN KEY (`ADDRESS_TYPE_ID` )
    REFERENCES `ADDRESS_TYPE` (`ADDRESS_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ADDRESS_STATE_FK`
    FOREIGN KEY (`STATE_ID` )
    REFERENCES `STATE` (`STATE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CUST_ADDRESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CUST_ADDRESS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CUST_ADDRESS` (
  `ADDRESS_ID` BIGINT NOT NULL ,
  `CUSTOMER_ID` BIGINT NOT NULL ,
  PRIMARY KEY (`ADDRESS_ID`, `CUSTOMER_ID`) ,
  INDEX `CUST_ADDR_FK` (`CUSTOMER_ID` ASC) ,
  INDEX `ADDRESS_CUST_FK` (`ADDRESS_ID` ASC) ,
  CONSTRAINT `CUST_ADDR_FK`
    FOREIGN KEY (`CUSTOMER_ID` )
    REFERENCES `CUSTOMER` (`CUSTOMER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ADDRESS_CUST_FK`
    FOREIGN KEY (`ADDRESS_ID` )
    REFERENCES `ADDRESS` (`ADDRESS_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BILL_DLRY_ADDRESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BILL_DLRY_ADDRESS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `BILL_DLRY_ADDRESS` (
  `ADDRESS_ID` BIGINT NOT NULL ,
  `ORDER_ID` BIGINT NOT NULL ,
  PRIMARY KEY (`ADDRESS_ID`, `ORDER_ID`) ,
  INDEX `CUST_ADDR_FK` (`ORDER_ID` ASC) ,
  INDEX `ADDRESS_CUST_FK` (`ADDRESS_ID` ASC) ,
  CONSTRAINT `ORDER_ADDR_FK0`
    FOREIGN KEY (`ORDER_ID` )
    REFERENCES `ORDERS` (`ORDER_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ADDRESS_ORDER_FK0`
    FOREIGN KEY (`ADDRESS_ID` )
    REFERENCES `ADDRESS` (`ADDRESS_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_STATUS_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_STATUS_TYPE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_STATUS_TYPE` (
  `PRODUCT_STATUS_TYPE_ID` BIGINT NOT NULL ,
  `PRODUCT_STATUS_NAME` VARCHAR(45) NOT NULL ,
  `PRODUCT_STATUS_CODE` VARCHAR(3) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PRODUCT_STATUS_TYPE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT` (
  `PRODUCT_ID` BIGINT NOT NULL ,
  `PRODUCT_NAME` VARCHAR(120) NOT NULL ,
  `PRODUCT_DESC` VARCHAR(1024) NOT NULL ,
  `PRODUCT_COST` DECIMAL(8,2) NOT NULL ,
  `PRODUCT_STATUS_TYPE_ID` BIGINT NOT NULL ,
  `SMALL_IMG_URL` VARCHAR(1024) NOT NULL ,
  `LARGE_IMG_URL` VARCHAR(1024) NOT NULL ,
  `UPDATED_BY` VARCHAR(45) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PRODUCT_ID`) ,
  INDEX `PRODUCT_STATUS_FK` (`PRODUCT_STATUS_TYPE_ID` ASC) ,
  CONSTRAINT `PRODUCT_STATUS_FK`
    FOREIGN KEY (`PRODUCT_STATUS_TYPE_ID` )
    REFERENCES `PRODUCT_STATUS_TYPE` (`PRODUCT_STATUS_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_QUANTITY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_QUANTITY` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_QUANTITY` (
  `PRODUCT_QUANTITY_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `QUANTITY` INT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PRODUCT_QUANTITY_ID`) ,
  INDEX `PRODUCT_QTY_PROD_FK` (`PRODUCT_ID` ASC) ,
  CONSTRAINT `PRODUCT_QTY_PROD_FK`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_SPECIFICATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_SPECIFICATION` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_SPECIFICATION` (
  `PRODUCT_SPECIFICATION_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `SPECIFICATION_NAME` VARCHAR(45) NOT NULL ,
  `SPECIFICATION_VALUE` VARCHAR(512) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PRODUCT_SPECIFICATION_ID`) ,
  INDEX `PROD_SPEC_PROD_FK` (`PRODUCT_ID` ASC) ,
  CONSTRAINT `PROD_SPEC_PROD_FK`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GEN_STATUS_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GEN_STATUS_TYPE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `GEN_STATUS_TYPE` (
  `GEN_STATUS_TYPE_ID` BIGINT NOT NULL ,
  `STATUS_NAME` VARCHAR(45) NOT NULL ,
  `STATUS_CODE` VARCHAR(3) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`GEN_STATUS_TYPE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `DEPARTMENT_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DEPARTMENT_TYPE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `DEPARTMENT_TYPE` (
  `DEPARTMENT_TYPE_ID` BIGINT NOT NULL ,
  `DEPT_TYPE_NAME` VARCHAR(45) NOT NULL ,
  `DEPT_TYPE_DESC` VARCHAR(512) NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`DEPARTMENT_TYPE_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CATEGORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CATEGORY` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CATEGORY` (
  `CATEGORY_ID` BIGINT NOT NULL ,
  `CATEGORY_NAME` VARCHAR(45) NOT NULL ,
  `DEPARTMENT_TYPE_ID` BIGINT NOT NULL ,
  `SPRING_LABEL` VARCHAR(250) NULL ,
  `CATEGORY_STATUS_ID` BIGINT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`CATEGORY_ID`) ,
  INDEX `CATE_STATUS_FK` (`CATEGORY_STATUS_ID` ASC) ,
  INDEX `DEPARTMENT_TYPE_FK` (`DEPARTMENT_TYPE_ID` ASC) ,
  CONSTRAINT `CATE_STATUS_FK`
    FOREIGN KEY (`CATEGORY_STATUS_ID` )
    REFERENCES `GEN_STATUS_TYPE` (`GEN_STATUS_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `DEPARTMENT_TYPE_FK`
    FOREIGN KEY (`DEPARTMENT_TYPE_ID` )
    REFERENCES `DEPARTMENT_TYPE` (`DEPARTMENT_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `SUB_CATEGORY_NAME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SUB_CATEGORY_NAME` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SUB_CATEGORY_NAME` (
  `SUB_CATEGORY_NAME_ID` BIGINT NOT NULL ,
  `SUB_CATEGORY_NAME` VARCHAR(45) NOT NULL ,
  `SUB_CATEGORY_CODE` VARCHAR(3) NOT NULL ,
  `SPRING_LABEL` VARCHAR(250) NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`SUB_CATEGORY_NAME_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `SUB_CATEGORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SUB_CATEGORY` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `SUB_CATEGORY` (
  `SUB_CATEGORY_ID` BIGINT NOT NULL ,
  `SUB_CATEGORY_NAME_ID` BIGINT NOT NULL ,
  `SUB_CAT_STATUS_TYPE_ID` BIGINT NOT NULL ,
  `CATEGORY_ID` BIGINT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`SUB_CATEGORY_ID`) ,
  INDEX `SUB_CAT_STATUS_FK` (`SUB_CAT_STATUS_TYPE_ID` ASC) ,
  INDEX `CATEGORY_FK` (`CATEGORY_ID` ASC) ,
  UNIQUE INDEX `DEPARTMENT_ID_UNIQUE` (`CATEGORY_ID` ASC, `SUB_CATEGORY_NAME_ID` ASC) ,
  INDEX `SUB_CAT_SUB_CAT_NAME_FK` (`SUB_CATEGORY_NAME_ID` ASC) ,
  CONSTRAINT `SUB_CAT_STATUS_FK`
    FOREIGN KEY (`SUB_CAT_STATUS_TYPE_ID` )
    REFERENCES `GEN_STATUS_TYPE` (`GEN_STATUS_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `CATEGORY_FK`
    FOREIGN KEY (`CATEGORY_ID` )
    REFERENCES `CATEGORY` (`CATEGORY_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SUB_CAT_SUB_CAT_NAME_FK`
    FOREIGN KEY (`SUB_CATEGORY_NAME_ID` )
    REFERENCES `SUB_CATEGORY_NAME` (`SUB_CATEGORY_NAME_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BRAND_NAME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BRAND_NAME` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `BRAND_NAME` (
  `BRAND_NAME_ID` BIGINT NOT NULL ,
  `BRAND_NAME` VARCHAR(45) NOT NULL ,
  `BRAND_CODE` VARCHAR(3) NOT NULL ,
  `SPRING_LABEL` VARCHAR(1024) NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`BRAND_NAME_ID`) ,
  UNIQUE INDEX `BRAND_NAME_UNIQUE` (`BRAND_NAME` ASC) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `BRAND`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BRAND` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `BRAND` (
  `BRAND_ID` BIGINT NOT NULL ,
  `BRAND_NAME_ID` BIGINT NOT NULL ,
  `SUB_CATEGORY_ID` BIGINT NOT NULL ,
  `BRAND_STATUS_ID` BIGINT NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`BRAND_ID`) ,
  INDEX `SUB_CATEGORY_FK` (`SUB_CATEGORY_ID` ASC) ,
  INDEX `BRAND_STATUS_FK` (`BRAND_STATUS_ID` ASC) ,
  UNIQUE INDEX `SUB_CATEGORY_ID_UNIQUE` (`SUB_CATEGORY_ID` ASC, `BRAND_NAME_ID` ASC) ,
  INDEX `BRAND_BRAND_NAME_FK` (`BRAND_NAME_ID` ASC) ,
  CONSTRAINT `SUB_CATEGORY_FK`
    FOREIGN KEY (`SUB_CATEGORY_ID` )
    REFERENCES `SUB_CATEGORY` (`SUB_CATEGORY_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `BRAND_STATUS_FK`
    FOREIGN KEY (`BRAND_STATUS_ID` )
    REFERENCES `GEN_STATUS_TYPE` (`GEN_STATUS_TYPE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `BRAND_BRAND_NAME_FK`
    FOREIGN KEY (`BRAND_NAME_ID` )
    REFERENCES `BRAND_NAME` (`BRAND_NAME_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_DEPT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_DEPT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_DEPT` (
  `PRODUCT_DEPT_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `CATEGORY_ID` BIGINT NOT NULL ,
  `SUB_CATEGORY_ID` BIGINT NOT NULL ,
  `BRAND_ID` BIGINT NULL ,
  `UPDATED_BY` VARCHAR(45) NOT NULL ,
  `CREAT_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PRODUCT_DEPT_ID`) ,
  INDEX `PROD_DEPT_PROD_FK` (`PRODUCT_ID` ASC) ,
  INDEX `PROD_DEPT_CATE_FK` (`CATEGORY_ID` ASC) ,
  INDEX `PROD_DEPT_SUB_CATE_FK` (`SUB_CATEGORY_ID` ASC) ,
  INDEX `PROD_DEPT_BRAND_FK` (`BRAND_ID` ASC) ,
  UNIQUE INDEX `PROD_CATE_SUB_BRAND_UNIQUE` (`PRODUCT_ID` ASC, `CATEGORY_ID` ASC, `SUB_CATEGORY_ID` ASC, `BRAND_ID` ASC) ,
  CONSTRAINT `PROD_DEPT_PROD_FK`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PROD_DEPT_CATE_FK`
    FOREIGN KEY (`CATEGORY_ID` )
    REFERENCES `CATEGORY` (`CATEGORY_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PROD_DEPT_SUB_CATE_FK`
    FOREIGN KEY (`SUB_CATEGORY_ID` )
    REFERENCES `SUB_CATEGORY` (`SUB_CATEGORY_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `PROD_DEPT_BRAND_FK`
    FOREIGN KEY (`BRAND_ID` )
    REFERENCES `BRAND` (`BRAND_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_DISCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_DISCOUNT` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_DISCOUNT` (
  `PRODUCT_DISCOUNT_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `DISCOUNT_PCT` DECIMAL(5,2) NULL ,
  `OFFER_PRODUCT` BIGINT NULL ,
  `DISCOUNT_START_DATE` TIMESTAMP NOT NULL ,
  `DISCOUNT_END_DATE` TIMESTAMP NULL ,
  `ALL_OFFERS` TINYINT(1)  NULL DEFAULT 0 ,
  `UPDATED_BY` VARCHAR(45) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NULL ,
  PRIMARY KEY (`PRODUCT_DISCOUNT_ID`) ,
  INDEX `PROD_DISC_PROD_FK` (`PRODUCT_ID` ASC) ,
  INDEX `OFFER_PRODUCT_FK` (`OFFER_PRODUCT` ASC) ,
  CONSTRAINT `PROD_DISC_PROD_FK`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `OFFER_PRODUCT_FK`
    FOREIGN KEY (`OFFER_PRODUCT` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CUSTOMER_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CUSTOMER_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CUSTOMER_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ORDER_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ORDER_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ORDER_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ADDRESS_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ADDRESS_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ADDRESS_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CUSTOMER_ORDER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CUSTOMER_ORDER` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CUSTOMER_ORDER` (
  `CUSTOMER_ORDER_ID` BIGINT NOT NULL ,
  `CUSTOMER_ID` BIGINT NOT NULL ,
  `ORDER_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `PRODUCT_DISCOUNT_ID` BIGINT NULL ,
  `ORDER_STATUS_ID` BIGINT NULL ,
  `QUANTITY` INT NOT NULL ,
  `PROD_ORG_COST` DECIMAL(8,2) NOT NULL ,
  `PROD_ADDL_DISCOUNT` DECIMAL(5,2) NULL ,
  `PROD_COST_AFTER_DISC` DECIMAL(8,2) NOT NULL ,
  `TOTAL_PROD_COST` DECIMAL(8,2) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  `UPDATED_BY` VARCHAR(45) NULL ,
  `UPDATE_DATE_TIME` TIMESTAMP NULL ,
  PRIMARY KEY (`CUSTOMER_ORDER_ID`) ,
  INDEX `CUST_ORD_CUST_FK` (`CUSTOMER_ID` ASC) ,
  INDEX `CUST_ORD_ORD_FK` (`ORDER_ID` ASC) ,
  INDEX `CUST_ORD_PROD_FK` (`PRODUCT_ID` ASC) ,
  UNIQUE INDEX `CUST_ORD_UNIQUE` (`CUSTOMER_ID` ASC, `ORDER_ID` ASC, `PRODUCT_ID` ASC) ,
  CONSTRAINT `CUST_ORD_CUST_FK`
    FOREIGN KEY (`CUSTOMER_ID` )
    REFERENCES `CUSTOMER` (`CUSTOMER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `CUST_ORD_ORD_FK`
    FOREIGN KEY (`ORDER_ID` )
    REFERENCES `ORDERS` (`ORDER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `CUST_ORD_PROD_FK`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_INVENTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_INVENTORY` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_INVENTORY` (
  `PRODUCT_INVENTORY_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `INVENTORY` INT NOT NULL ,
  `UPDATED_BY` VARCHAR(45) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`PRODUCT_INVENTORY_ID`) ,
  INDEX `PROD_INV_PROD_FK` (`PRODUCT_ID` ASC) ,
  CONSTRAINT `PROD_INV_PROD_FK`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CUST_ORD_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CUST_ORD_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CUST_ORD_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PROD_INV_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PROD_INV_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PROD_INV_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PRODUCT_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PRODUCT_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `PRODUCT_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GLOBAL_SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GLOBAL_SEQUENCE` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `GLOBAL_SEQUENCE` (
  `ID` BIGINT NOT NULL DEFAULT 1 ,
  PRIMARY KEY (`ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ADMIN_USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ADMIN_USER` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ADMIN_USER` (
  `ADMIN_USER_ID` BIGINT NOT NULL ,
  `USER_NAME` VARCHAR(15) NOT NULL ,
  `PASSWORD` VARCHAR(45) NOT NULL ,
  `USER_EMAIL` VARCHAR(45) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`ADMIN_USER_ID`) )
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ORDER_COMMENTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ORDER_COMMENTS` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `ORDER_COMMENTS` (
  `ORDER_COMMENTS_ID` BIGINT NOT NULL ,
  `ORDER_ID` BIGINT NOT NULL ,
  `COMMENT_TEXT` VARCHAR(1024) NOT NULL ,
  `UPDATE_BY` VARCHAR(25) NOT NULL ,
  `CREATE_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`ORDER_COMMENTS_ID`) ,
  INDEX `COMMENT_ORDER_ID` (`ORDER_ID` ASC) ,
  CONSTRAINT `COMMENT_ORDER_ID`
    FOREIGN KEY (`ORDER_ID` )
    REFERENCES `ORDERS` (`ORDER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CUSTOMER_GLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CUSTOMER_GLIST` ;

SHOW WARNINGS;
CREATE  TABLE IF NOT EXISTS `CUSTOMER_GLIST` (
  `CUSTOMER_GLIST_ID` BIGINT NOT NULL ,
  `CUSTOMER_ID` BIGINT NOT NULL ,
  `PRODUCT_ID` BIGINT NOT NULL ,
  `CREATED_DATE_TIME` TIMESTAMP NOT NULL ,
  PRIMARY KEY (`CUSTOMER_GLIST_ID`) ,
  INDEX `GLIST_CUST_FK` (`CUSTOMER_ID` ASC) ,
  INDEX `GLIST_PROD_ID` (`PRODUCT_ID` ASC) ,
  CONSTRAINT `GLIST_CUST_FK`
    FOREIGN KEY (`CUSTOMER_ID` )
    REFERENCES `CUSTOMER` (`CUSTOMER_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `GLIST_PROD_ID`
    FOREIGN KEY (`PRODUCT_ID` )
    REFERENCES `PRODUCT` (`PRODUCT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
